{"version":3,"file":"immox.module.js","sources":["../index.ts"],"sourcesContent":["import { useMemo, useState, useCallback } from 'react'\r\nimport { Draft, produce } from 'immer'\r\n\r\nexport function useImmox<S = any>(\r\n  initialValue: S | (() => S)\r\n): [S, (f: (draft: Draft<S>) => void | S) => void]\r\nexport function useImmox(initialState: any) {\r\n  const depends: Set<string | number | symbol> = new Set()\r\n  const clonedState = {}\r\n  const getters: Map<string, { get: () => any; depends: (string | number | symbol)[] }> = new Map()\r\n  const proxy = new Proxy(initialState, {\r\n    get: function(target, name) {\r\n      depends.add(name)\r\n    },\r\n  })\r\n  let keys: string[] = []\r\n  let obj = {}\r\n  if (Object.getPrototypeOf(initialState).constructor.name === 'Object') {\r\n    keys = Object.keys(initialState)\r\n    obj = initialState\r\n  } else {\r\n    keys = [\r\n      ...Object.keys(Object.getOwnPropertyDescriptors(Object.getPrototypeOf(initialState))),\r\n      ...Object.keys(initialState),\r\n    ]\r\n    obj = Object.getPrototypeOf(initialState)\r\n  }\r\n  keys.forEach(prop => {\r\n    const desc = Object.getOwnPropertyDescriptor(obj, prop)\r\n    if (desc && desc.get) {\r\n      clonedState[prop] = desc.get.call(proxy)\r\n      getters.set(prop, { get: desc.get, depends: Array.from(depends) })\r\n      depends.clear()\r\n    } else {\r\n      clonedState[prop] = initialState[prop]\r\n    }\r\n  })\r\n\r\n  const [state, updateState] = useState(clonedState)\r\n  const updateDraft = useCallback(updater => {\r\n    updateState(produce(updater))\r\n  }, [])\r\n\r\n  getters.forEach((value, prop) => {\r\n    const depends = value.depends.map(depend => state[depend])\r\n    //eslint-disable-next-line\r\n    useMemo(() => {\r\n      updateDraft((d: Draft<any>) => {\r\n        d[prop] = value.get.call(d)\r\n      })\r\n      //eslint-disable-next-line\r\n    }, depends)\r\n  })\r\n\r\n  return [state, updateDraft]\r\n}\r\n\r\nexport default useImmox\r\n"],"names":["useImmox","initialState","depends","Set","clonedState","getters","Map","proxy","Proxy","get","target","name","add","keys","obj","Object","getPrototypeOf","constructor","getOwnPropertyDescriptors","forEach","prop","desc","getOwnPropertyDescriptor","call","set","Array","from","clear","useState","updateDraft","useCallback","updater","updateState","produce","value","map","depend","state","useMemo","d"],"mappings":"wGAMgBA,EAASC,OACjBC,EAAyC,IAAIC,IAC7CC,EAAc,GACdC,EAAkF,IAAIC,IACtFC,EAAQ,IAAIC,MAAMP,EAAc,CACpCQ,IAAK,SAASC,EAAQC,GACpBT,EAAQU,IAAID,MAGZE,EAAiB,GACjBC,EAAM,GACmD,WAAzDC,OAAOC,eAAef,GAAcgB,YAAYN,MAClDE,EAAOE,OAAOF,KAAKZ,GACnBa,EAAMb,IAENY,EAAOE,OACKF,KAAKE,OAAOG,0BAA0BH,OAAOC,eAAef,YACnEc,OAAOF,KAAKZ,IAEjBa,EAAMC,OAAOC,eAAef,IAE9BY,EAAKM,iBAAQC,OACLC,EAAON,OAAOO,yBAAyBR,EAAKM,GAC9CC,GAAQA,EAAKZ,KACfL,EAAYgB,GAAQC,EAAKZ,IAAIc,KAAKhB,GAClCF,EAAQmB,IAAIJ,EAAM,CAAEX,IAAKY,EAAKZ,IAAKP,QAASuB,MAAMC,KAAKxB,KACvDA,EAAQyB,SAERvB,EAAYgB,GAAQnB,EAAamB,WAIRQ,EAASxB,iBAChCyB,EAAcC,WAAYC,GAC9BC,EAAYC,EAAQF,KACnB,WAEH1B,EAAQc,iBAASe,EAAOd,OAChBlB,EAAUgC,EAAMhC,QAAQiC,aAAIC,UAAUC,EAAMD,KAElDE,aACET,WAAaU,GACXA,EAAEnB,GAAQc,EAAMzB,IAAIc,KAAKgB,MAG1BrC,KAGE,CAACmC,EAAOR"}