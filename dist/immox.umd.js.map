{"version":3,"file":"immox.umd.js","sources":["../index.ts"],"sourcesContent":["import { useMemo, useState, useCallback } from 'react'\nimport { Draft, produce } from 'immer'\n\nconst immox = Symbol('immox')\ntype Getter = { get: () => any; dependents: (string | number | symbol)[] }\n\nexport function useImmox<S = any>(\n  initialValue: S | (() => S)\n): [S, (f: (draft: Draft<S>) => void | S) => void]\nexport function useImmox(initialState: any) {\n  useMemo(() => {\n    const getters: Map<string, Getter> = new Map()\n    const dependents: Set<string | number | symbol> = new Set()\n    const proxy = new Proxy(initialState, {\n      get: function(target, name) {\n        dependents.add(name)\n      },\n    })\n    let keys: string[] = Object.keys(initialState)\n    if (!(Object.getPrototypeOf(initialState).constructor.name === 'Object')) {\n      keys = [\n        ...Object.keys(Object.getOwnPropertyDescriptors(Object.getPrototypeOf(initialState))),\n        ...Object.keys(initialState),\n      ]\n    }\n    keys.forEach(prop => {\n      const desc = Object.getOwnPropertyDescriptor(initialState, prop)\n      if (desc && desc.get) {\n        Object.defineProperty(initialState, prop, { value: desc.get.call(proxy) })\n        getters.set(prop, { get: desc.get, dependents: Array.from(dependents) })\n        dependents.clear()\n      }\n    })\n    initialState[immox] = getters\n  }, [])\n\n  const [state, updateState] = useState(initialState)\n  const updateDraft = useCallback(updater => {\n    updateState(produce(updater))\n  }, [])\n\n  state[immox].forEach((value: Getter, prop: string) => {\n    const dependents = value.dependents.map(dependent => state[dependent])\n    //eslint-disable-next-line\n    useMemo(() => {\n      updateDraft((d: Draft<any>) => {\n        d[prop] = value.get.call(d)\n      })\n      //eslint-disable-next-line\n    }, dependents)\n  })\n\n  return [state, updateDraft]\n}\n\nexport default useImmox\n"],"names":["const","immox","Symbol","useImmox","initialState","useMemo","getters","Map","dependents","Set","proxy","Proxy","get","target","name","add","keys","Object","getPrototypeOf","constructor","getOwnPropertyDescriptors","forEach","prop","desc","getOwnPropertyDescriptor","defineProperty","value","call","set","Array","from","clear","useState","updateDraft","useCallback","updater","updateState","produce","state","map","dependent","d"],"mappings":"iPAGAA,IAAMC,EAAQC,OAAO,kBAMLC,EAASC,GACvBC,yBACQC,EAA+B,IAAIC,IACnCC,EAA4C,IAAIC,IAChDC,EAAQ,IAAIC,MAAMP,EAAc,CACpCQ,IAAK,SAASC,EAAQC,GACpBN,EAAWO,IAAID,MAGfE,EAAiBC,OAAOD,KAAKZ,GAC8B,WAAzDa,OAAOC,eAAed,GAAce,YAAYL,OACpDE,EAAOC,OACKD,KAAKC,OAAOG,0BAA0BH,OAAOC,eAAed,YACnEa,OAAOD,KAAKZ,KAGnBY,EAAKK,iBAAQC,OACLC,EAAON,OAAOO,yBAAyBpB,EAAckB,GACvDC,GAAQA,EAAKX,MACfK,OAAOQ,eAAerB,EAAckB,EAAM,CAAEI,MAAOH,EAAKX,IAAIe,KAAKjB,KACjEJ,EAAQsB,IAAIN,EAAM,CAAEV,IAAKW,EAAKX,IAAKJ,WAAYqB,MAAMC,KAAKtB,KAC1DA,EAAWuB,WAGf3B,EAAaH,GAASK,GACrB,UAE0B0B,WAAS5B,iBAChC6B,EAAcC,uBAAYC,GAC9BC,EAAYC,UAAQF,KACnB,WAEHG,EAAMrC,GAAOoB,iBAASK,EAAeJ,OAC7Bd,EAAakB,EAAMlB,WAAW+B,aAAIC,UAAaF,EAAME,KAE3DnC,qBACE4B,WAAaQ,GACXA,EAAEnB,GAAQI,EAAMd,IAAIe,KAAKc,MAG1BjC,KAGE,CAAC8B,EAAOL"}