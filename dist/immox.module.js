import{useMemo as t,useState as e,useCallback as o}from"react";import{produce as r}from"immer";function n(t,e,o){if(1===arguments.length&&"function"==typeof t)return function(){for(var e=[],o=arguments.length;o--;)e[o]=arguments[o];return r(this,function(o){t.apply(o,e)})};var c=o||Object.getOwnPropertyDescriptor(t,e);if(!c)throw new Error("Property '"+e+"' does not exist on the specified target (tip: make sure to pass 'Class.prototype', not just 'Class')");var s=c.value;if("function"!=typeof s)throw new Error("@producer should be used on methods only, got: "+typeof s);var i=Object.assign({},c,{value:n(s)});if(o)return i;Object.defineProperty(t,e,i)}function c(n){t(function(){if("Object"===Object.getPrototypeOf(n).constructor.name){var t=Object.getOwnPropertyDescriptors(n),e={},o={};Object.keys(t).forEach(function(r){"function"==typeof t[r].value||t[r].set?o=Object.assign({},t,o):e=Object.assign({},t,e)}),n=Object.create({},e),Object.setPrototypeOf(n,Object.create({},o)),console.log("Object Literal")}else console.log("Class")},[]);var c=e(n),s=c[1];return[c[0],o(function(t){s(r(t))},[])]}export default c;export{n as producer,c as useImmox};
//# sourceMappingURL=immox.module.js.map
